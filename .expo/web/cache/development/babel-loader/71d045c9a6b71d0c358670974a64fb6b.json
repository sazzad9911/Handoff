{"ast":null,"code":"'use strict';\n\nvar normalizeColor = require(\"../StyleSheet/normalizeColor\");\n\nvar colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {\n  var color = props[propName];\n\n  if (color === undefined || color === null) {\n    if (isRequired) {\n      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');\n    }\n\n    return;\n  }\n\n  if (typeof color === 'number') {\n    return;\n  }\n\n  if (normalizeColor(color) === null) {\n    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\\n' + \"Valid color formats are\\n  - '#f0f' (#rgb)\\n  - '#f0fc' (#rgba)\\n  - '#ff00ff' (#rrggbb)\\n  - '#ff00ff00' (#rrggbbaa)\\n  - 'rgb(255, 255, 255)'\\n  - 'rgba(255, 255, 255, 1.0)'\\n  - 'hsl(360, 100%, 100%)'\\n  - 'hsla(360, 100%, 100%, 1.0)'\\n  - 'transparent'\\n  - 'red'\\n  - 0xff00ff00 (0xrrggbbaa)\\n\");\n  }\n};\n\nvar ColorPropType = colorPropType.bind(null, false);\nColorPropType.isRequired = colorPropType.bind(null, true);\nmodule.exports = ColorPropType;","map":{"version":3,"sources":["C:/Project/HTML/MyProfile/Handoff/node_modules/react-native/Libraries/DeprecatedPropTypes/DeprecatedColorPropType.js"],"names":["normalizeColor","require","colorPropType","isRequired","props","propName","componentName","location","propFullName","color","undefined","Error","ColorPropType","bind","module","exports"],"mappings":"AASA;;AAEA,IAAMA,cAAc,GAAGC,OAAO,gCAA9B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CACpBC,UADoB,EAEpBC,KAFoB,EAGpBC,QAHoB,EAIpBC,aAJoB,EAKpBC,QALoB,EAMpBC,YANoB,EAOpB;AACA,MAAMC,KAAK,GAAGL,KAAK,CAACC,QAAD,CAAnB;;AACA,MAAII,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;AACzC,QAAIN,UAAJ,EAAgB;AACd,aAAO,IAAIQ,KAAJ,CACL,cACEJ,QADF,GAEE,IAFF,IAGGC,YAAY,IAAIH,QAHnB,IAIE,0BAJF,GAKEC,aALF,GAME,IAPG,CAAP;AASD;;AACD;AACD;;AAED,MAAI,OAAOG,KAAP,KAAiB,QAArB,EAA+B;AAI7B;AACD;;AAED,MAAIT,cAAc,CAACS,KAAD,CAAd,KAA0B,IAA9B,EAAoC;AAClC,WAAO,IAAIE,KAAJ,CACL,aACEJ,QADF,GAEE,IAFF,IAGGC,YAAY,IAAIH,QAHnB,IAIE,iBAJF,GAKEC,aALF,GAME,KANF,GAOEG,KAPF,GAQE,IARF,+SADK,CAAP;AAwBD;AACF,CAzDD;;AA2DA,IAAMG,aAAa,GAAGV,aAAa,CAACW,IAAd,CAAmB,IAAnB,EAAyB,KAAzB,CAAtB;AACAD,aAAa,CAACT,UAAd,GAA2BD,aAAa,CAACW,IAAd,CAAmB,IAAnB,EAAyB,IAAzB,CAA3B;AAEAC,MAAM,CAACC,OAAP,GAAiBH,aAAjB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nconst normalizeColor = require('../StyleSheet/normalizeColor');\r\n\r\nconst colorPropType = function(\r\n  isRequired,\r\n  props,\r\n  propName,\r\n  componentName,\r\n  location,\r\n  propFullName,\r\n) {\r\n  const color = props[propName];\r\n  if (color === undefined || color === null) {\r\n    if (isRequired) {\r\n      return new Error(\r\n        'Required ' +\r\n          location +\r\n          ' `' +\r\n          (propFullName || propName) +\r\n          '` was not specified in `' +\r\n          componentName +\r\n          '`.',\r\n      );\r\n    }\r\n    return;\r\n  }\r\n\r\n  if (typeof color === 'number') {\r\n    // Developers should not use a number, but we are using the prop type\r\n    // both for user provided colors and for transformed ones. This isn't ideal\r\n    // and should be fixed but will do for now...\r\n    return;\r\n  }\r\n\r\n  if (normalizeColor(color) === null) {\r\n    return new Error(\r\n      'Invalid ' +\r\n        location +\r\n        ' `' +\r\n        (propFullName || propName) +\r\n        '` supplied to `' +\r\n        componentName +\r\n        '`: ' +\r\n        color +\r\n        '\\n' +\r\n        `Valid color formats are\r\n  - '#f0f' (#rgb)\r\n  - '#f0fc' (#rgba)\r\n  - '#ff00ff' (#rrggbb)\r\n  - '#ff00ff00' (#rrggbbaa)\r\n  - 'rgb(255, 255, 255)'\r\n  - 'rgba(255, 255, 255, 1.0)'\r\n  - 'hsl(360, 100%, 100%)'\r\n  - 'hsla(360, 100%, 100%, 1.0)'\r\n  - 'transparent'\r\n  - 'red'\r\n  - 0xff00ff00 (0xrrggbbaa)\r\n`,\r\n    );\r\n  }\r\n};\r\n\r\nconst ColorPropType = colorPropType.bind(null, false /* isRequired */);\r\nColorPropType.isRequired = colorPropType.bind(null, true /* isRequired */);\r\n\r\nmodule.exports = ColorPropType;\r\n"]},"metadata":{},"sourceType":"script"}