{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport PropTypes from 'prop-types';\nimport styles from \"./Pagination.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar PaginationDot = function (_PureComponent) {\n  _inherits(PaginationDot, _PureComponent);\n\n  var _super = _createSuper(PaginationDot);\n\n  function PaginationDot(props) {\n    var _this;\n\n    _classCallCheck(this, PaginationDot);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      animColor: new Animated.Value(0),\n      animOpacity: new Animated.Value(0),\n      animTransform: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(PaginationDot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this._animate(1);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.active !== this.props.active) {\n        this._animate(this.props.active ? 1 : 0);\n      }\n    }\n  }, {\n    key: \"_animate\",\n    value: function _animate() {\n      var toValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var _this$state = this.state,\n          animColor = _this$state.animColor,\n          animOpacity = _this$state.animOpacity,\n          animTransform = _this$state.animTransform;\n      var _this$props = this.props,\n          animatedDuration = _this$props.animatedDuration,\n          animatedFriction = _this$props.animatedFriction,\n          animatedTension = _this$props.animatedTension;\n      var commonProperties = {\n        toValue: toValue,\n        duration: animatedDuration,\n        isInteraction: false,\n        useNativeDriver: !this._shouldAnimateColor\n      };\n      var animations = [Animated.timing(animOpacity, _objectSpread({\n        easing: Easing.linear\n      }, commonProperties)), Animated.spring(animTransform, _objectSpread({\n        friction: animatedFriction,\n        tension: animatedTension\n      }, commonProperties))];\n\n      if (this._shouldAnimateColor) {\n        animations.push(Animated.timing(animColor, _objectSpread({\n          easing: Easing.linear\n        }, commonProperties)));\n      }\n\n      Animated.parallel(animations).start();\n    }\n  }, {\n    key: \"_shouldAnimateColor\",\n    get: function get() {\n      var _this$props2 = this.props,\n          color = _this$props2.color,\n          inactiveColor = _this$props2.inactiveColor;\n      return color && inactiveColor;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          animColor = _this$state2.animColor,\n          animOpacity = _this$state2.animOpacity,\n          animTransform = _this$state2.animTransform;\n      var _this$props3 = this.props,\n          active = _this$props3.active,\n          activeOpacity = _this$props3.activeOpacity,\n          carouselRef = _this$props3.carouselRef,\n          color = _this$props3.color,\n          containerStyle = _this$props3.containerStyle,\n          inactiveColor = _this$props3.inactiveColor,\n          inactiveStyle = _this$props3.inactiveStyle,\n          inactiveOpacity = _this$props3.inactiveOpacity,\n          inactiveScale = _this$props3.inactiveScale,\n          index = _this$props3.index,\n          style = _this$props3.style,\n          tappable = _this$props3.tappable,\n          delayPressInDot = _this$props3.delayPressInDot;\n      var animatedStyle = {\n        opacity: animOpacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveOpacity, 1]\n        }),\n        transform: [{\n          scale: animTransform.interpolate({\n            inputRange: [0, 1],\n            outputRange: [inactiveScale, 1]\n          })\n        }]\n      };\n      var animatedColor = this._shouldAnimateColor ? {\n        backgroundColor: animColor.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveColor, color]\n        })\n      } : {};\n      var dotContainerStyle = [styles.sliderPaginationDotContainer, containerStyle || {}];\n      var dotStyle = [styles.sliderPaginationDot, style || {}, !active && inactiveStyle || {}, animatedStyle, animatedColor];\n      var onPress = tappable ? function () {\n        try {\n          var currentRef = carouselRef.current || carouselRef;\n\n          currentRef._snapToItem(currentRef._getPositionIndex(index));\n        } catch (error) {\n          console.warn('react-native-snap-carousel | Pagination: ' + '`carouselRef` has to be a Carousel ref.\\n' + error);\n        }\n      } : undefined;\n      return _jsx(TouchableOpacity, {\n        accessible: false,\n        style: dotContainerStyle,\n        activeOpacity: tappable ? activeOpacity : 1,\n        onPress: onPress,\n        delayPressIn: delayPressInDot,\n        children: _jsx(Animated.View, {\n          style: dotStyle\n        })\n      });\n    }\n  }]);\n\n  return PaginationDot;\n}(PureComponent);\n\nPaginationDot.propTypes = {\n  inactiveOpacity: PropTypes.number.isRequired,\n  inactiveScale: PropTypes.number.isRequired,\n  active: PropTypes.bool,\n  activeOpacity: PropTypes.number,\n  carouselRef: PropTypes.object,\n  color: PropTypes.string,\n  containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  inactiveColor: PropTypes.string,\n  inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  index: PropTypes.number,\n  style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  tappable: PropTypes.bool\n};\nexport { PaginationDot as default };","map":{"version":3,"sources":["C:/Project/HTML/MyProfile/Handoff/node_modules/react-native-image-slider-box/node_modules/react-native-snap-carousel/src/pagination/PaginationDot.js"],"names":["React","PureComponent","ViewPropTypes","PropTypes","styles","PaginationDot","props","state","animColor","Animated","Value","animOpacity","animTransform","active","_animate","prevProps","toValue","animatedDuration","animatedFriction","animatedTension","commonProperties","duration","isInteraction","useNativeDriver","_shouldAnimateColor","animations","timing","easing","Easing","linear","spring","friction","tension","push","parallel","start","color","inactiveColor","activeOpacity","carouselRef","containerStyle","inactiveStyle","inactiveOpacity","inactiveScale","index","style","tappable","delayPressInDot","animatedStyle","opacity","interpolate","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","sliderPaginationDotContainer","dotStyle","sliderPaginationDot","onPress","currentRef","current","_snapToItem","_getPositionIndex","error","console","warn","undefined","propTypes","number","isRequired","bool","object","string","View"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { View, Animated, Easing, TouchableOpacity, ViewPropTypes } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Pagination.style';\r\n\r\nexport default class PaginationDot extends PureComponent {\r\n\r\n    static propTypes = {\r\n        inactiveOpacity: PropTypes.number.isRequired,\r\n        inactiveScale: PropTypes.number.isRequired,\r\n        active: PropTypes.bool,\r\n        activeOpacity: PropTypes.number,\r\n        carouselRef: PropTypes.object,\r\n        color: PropTypes.string,\r\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\r\n        inactiveColor: PropTypes.string,\r\n        inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\r\n        index: PropTypes.number,\r\n        style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\r\n        tappable: PropTypes.bool\r\n    };\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            animColor: new Animated.Value(0),\r\n            animOpacity: new Animated.Value(0),\r\n            animTransform: new Animated.Value(0)\r\n        };\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (this.props.active) {\r\n            this._animate(1);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n        if (prevProps.active !== this.props.active) {\r\n            this._animate(this.props.active ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    _animate (toValue = 0) {\r\n        const { animColor, animOpacity, animTransform } = this.state;\r\n        const { animatedDuration, animatedFriction, animatedTension } = this.props\r\n\r\n        const commonProperties = {\r\n            toValue,\r\n            duration: animatedDuration,\r\n            isInteraction: false,\r\n            useNativeDriver: !this._shouldAnimateColor\r\n        };\r\n\r\n        let animations = [\r\n            Animated.timing(animOpacity, {\r\n                easing: Easing.linear,\r\n                ...commonProperties\r\n            }),\r\n            Animated.spring(animTransform, {\r\n                friction: animatedFriction,\r\n                tension: animatedTension,\r\n                ...commonProperties\r\n            })\r\n        ];\r\n\r\n        if (this._shouldAnimateColor) {\r\n            animations.push(Animated.timing(animColor, {\r\n                easing: Easing.linear,\r\n                ...commonProperties\r\n            }));\r\n        }\r\n\r\n        Animated.parallel(animations).start();\r\n    }\r\n\r\n    get _shouldAnimateColor () {\r\n        const { color, inactiveColor } = this.props;\r\n        return color && inactiveColor;\r\n    }\r\n\r\n    render () {\r\n        const { animColor, animOpacity, animTransform } = this.state;\r\n        const {\r\n            active,\r\n            activeOpacity,\r\n            carouselRef,\r\n            color,\r\n            containerStyle,\r\n            inactiveColor,\r\n            inactiveStyle,\r\n            inactiveOpacity,\r\n            inactiveScale,\r\n            index,\r\n            style,\r\n            tappable,\r\n            delayPressInDot\r\n        } = this.props;\r\n\r\n        const animatedStyle = {\r\n            opacity: animOpacity.interpolate({\r\n                inputRange: [0, 1],\r\n                outputRange: [inactiveOpacity, 1]\r\n            }),\r\n            transform: [{\r\n                scale: animTransform.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [inactiveScale, 1]\r\n                })\r\n            }]\r\n        };\r\n        const animatedColor = this._shouldAnimateColor ? {\r\n            backgroundColor: animColor.interpolate({\r\n                inputRange: [0, 1],\r\n                outputRange: [inactiveColor, color]\r\n            })\r\n        } : {};\r\n\r\n        const dotContainerStyle = [\r\n            styles.sliderPaginationDotContainer,\r\n            containerStyle || {}\r\n        ];\r\n\r\n        const dotStyle = [\r\n            styles.sliderPaginationDot,\r\n            style || {},\r\n            (!active && inactiveStyle) || {},\r\n            animatedStyle,\r\n            animatedColor\r\n        ];\r\n\r\n        const onPress = tappable ? () => {\r\n            try {\r\n                const currentRef = carouselRef.current || carouselRef;\r\n                currentRef._snapToItem(currentRef._getPositionIndex(index));\r\n            } catch (error) {\r\n                console.warn(\r\n                    'react-native-snap-carousel | Pagination: ' +\r\n                    '`carouselRef` has to be a Carousel ref.\\n' + error\r\n                );\r\n            }\r\n        } : undefined;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n              accessible={false}\r\n              style={dotContainerStyle}\r\n              activeOpacity={tappable ? activeOpacity : 1}\r\n              onPress={onPress}\r\n              delayPressIn={delayPressInDot}\r\n            >\r\n                <Animated.View style={dotStyle} />\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}