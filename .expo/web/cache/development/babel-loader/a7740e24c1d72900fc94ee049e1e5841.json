{"ast":null,"code":"'use strict';\n\nvar UIManager = require(\"../ReactNative/UIManager\");\n\nfunction deprecatedPropType(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (!global.RN$Bridgeless && !UIManager.getViewManagerConfig(componentName) && props[propName] !== undefined) {\n      console.warn(\"`\" + propName + \"` supplied to `\" + componentName + \"` has been deprecated. \" + explanation);\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n}\n\nmodule.exports = deprecatedPropType;","map":{"version":3,"sources":["C:/Project/HTML/MyProfile/Handoff/node_modules/react-native/Libraries/Utilities/deprecatedPropType.js"],"names":["UIManager","require","deprecatedPropType","propType","explanation","validate","props","propName","componentName","global","RN$Bridgeless","getViewManagerConfig","undefined","console","warn","rest","module","exports"],"mappings":"AAUA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,4BAAzB;;AAKA,SAASC,kBAAT,CACEC,QADF,EAEEC,WAFF,EAGuB;AACrB,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAA2D;AAEhE,QACE,CAACC,MAAM,CAACC,aAAR,IACA,CAACV,SAAS,CAACW,oBAAV,CAA+BH,aAA/B,CADD,IAEAF,KAAK,CAACC,QAAD,CAAL,KAAoBK,SAHtB,EAIE;AACAC,MAAAA,OAAO,CAACC,IAAR,OACOP,QADP,uBACmCC,aADnC,+BAC2EJ,WAD3E;AAGD;;AAV+D,sCAANW,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAYhE,WAAOZ,QAAQ,MAAR,UAASG,KAAT,EAAgBC,QAAhB,EAA0BC,aAA1B,SAA4CO,IAA5C,EAAP;AACD,GAbD;AAcD;;AAEDC,MAAM,CAACC,OAAP,GAAiBf,kBAAjB","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow strict-local\r\n */\r\n\r\n'use strict';\r\n\r\nconst UIManager = require('../ReactNative/UIManager');\r\n\r\n/**\r\n * Adds a deprecation warning when the prop is used.\r\n */\r\nfunction deprecatedPropType(\r\n  propType: ReactPropsCheckType,\r\n  explanation: string,\r\n): ReactPropsCheckType {\r\n  return function validate(props, propName, componentName, ...rest) {\r\n    // Don't warn for native components.\r\n    if (\r\n      !global.RN$Bridgeless &&\r\n      !UIManager.getViewManagerConfig(componentName) &&\r\n      props[propName] !== undefined\r\n    ) {\r\n      console.warn(\r\n        `\\`${propName}\\` supplied to \\`${componentName}\\` has been deprecated. ${explanation}`,\r\n      );\r\n    }\r\n\r\n    return propType(props, propName, componentName, ...rest);\r\n  };\r\n}\r\n\r\nmodule.exports = deprecatedPropType;\r\n"]},"metadata":{},"sourceType":"script"}