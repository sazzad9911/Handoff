{"ast":null,"code":"'use strict';\n\nvar ReactPropTypes = require('prop-types');\n\nvar deprecatedPropType = require(\"../Utilities/deprecatedPropType\");\n\nvar TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {\n  if (props[propName]) {\n    return new Error('The transformMatrix style property is deprecated. ' + 'Use `transform: [{ matrix: ... }]` instead.');\n  }\n};\n\nvar DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {\n  if (props[propName]) {\n    return new Error('The decomposedMatrix style property is deprecated. ' + 'Use `transform: [...]` instead.');\n  }\n};\n\nvar DeprecatedTransformPropTypes = {\n  transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({\n    perspective: ReactPropTypes.number\n  }), ReactPropTypes.shape({\n    rotate: ReactPropTypes.string\n  }), ReactPropTypes.shape({\n    rotateX: ReactPropTypes.string\n  }), ReactPropTypes.shape({\n    rotateY: ReactPropTypes.string\n  }), ReactPropTypes.shape({\n    rotateZ: ReactPropTypes.string\n  }), ReactPropTypes.shape({\n    scale: ReactPropTypes.number\n  }), ReactPropTypes.shape({\n    scaleX: ReactPropTypes.number\n  }), ReactPropTypes.shape({\n    scaleY: ReactPropTypes.number\n  }), ReactPropTypes.shape({\n    translateX: ReactPropTypes.number\n  }), ReactPropTypes.shape({\n    translateY: ReactPropTypes.number\n  }), ReactPropTypes.shape({\n    skewX: ReactPropTypes.string\n  }), ReactPropTypes.shape({\n    skewY: ReactPropTypes.string\n  })])),\n  transformMatrix: TransformMatrixPropType,\n  decomposedMatrix: DecomposedMatrixPropType,\n  scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),\n  translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')\n};\nmodule.exports = DeprecatedTransformPropTypes;","map":{"version":3,"sources":["C:/Project/HTML/MyProfile/Handoff/node_modules/react-native/Libraries/DeprecatedPropTypes/DeprecatedTransformPropTypes.js"],"names":["ReactPropTypes","require","deprecatedPropType","TransformMatrixPropType","props","propName","componentName","Error","DecomposedMatrixPropType","DeprecatedTransformPropTypes","transform","arrayOf","oneOfType","shape","perspective","number","rotate","string","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","translateX","translateY","skewX","skewY","transformMatrix","decomposedMatrix","rotation","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * @flow\r\n */\r\n\r\n'use strict';\r\n\r\nconst ReactPropTypes = require('prop-types');\r\n\r\nconst deprecatedPropType = require('../Utilities/deprecatedPropType');\r\n\r\nconst TransformMatrixPropType = function(\r\n  props: Object,\r\n  propName: string,\r\n  componentName: string,\r\n): ?Error {\r\n  if (props[propName]) {\r\n    return new Error(\r\n      'The transformMatrix style property is deprecated. ' +\r\n        'Use `transform: [{ matrix: ... }]` instead.',\r\n    );\r\n  }\r\n};\r\n\r\nconst DecomposedMatrixPropType = function(\r\n  props: Object,\r\n  propName: string,\r\n  componentName: string,\r\n): ?Error {\r\n  if (props[propName]) {\r\n    return new Error(\r\n      'The decomposedMatrix style property is deprecated. ' +\r\n        'Use `transform: [...]` instead.',\r\n    );\r\n  }\r\n};\r\n\r\nconst DeprecatedTransformPropTypes = {\r\n  transform: (ReactPropTypes.arrayOf(\r\n    ReactPropTypes.oneOfType([\r\n      ReactPropTypes.shape({perspective: ReactPropTypes.number}),\r\n      ReactPropTypes.shape({rotate: ReactPropTypes.string}),\r\n      ReactPropTypes.shape({rotateX: ReactPropTypes.string}),\r\n      ReactPropTypes.shape({rotateY: ReactPropTypes.string}),\r\n      ReactPropTypes.shape({rotateZ: ReactPropTypes.string}),\r\n      ReactPropTypes.shape({scale: ReactPropTypes.number}),\r\n      ReactPropTypes.shape({scaleX: ReactPropTypes.number}),\r\n      ReactPropTypes.shape({scaleY: ReactPropTypes.number}),\r\n      ReactPropTypes.shape({translateX: ReactPropTypes.number}),\r\n      ReactPropTypes.shape({translateY: ReactPropTypes.number}),\r\n      ReactPropTypes.shape({skewX: ReactPropTypes.string}),\r\n      ReactPropTypes.shape({skewY: ReactPropTypes.string}),\r\n    ]),\r\n  ): React$PropType$Primitive<\r\n    Array<\r\n      | {perspective?: number, ...}\r\n      | {rotate?: string, ...}\r\n      | {rotateX?: string, ...}\r\n      | {rotateY?: string, ...}\r\n      | {rotateZ?: string, ...}\r\n      | {scale?: number, ...}\r\n      | {scaleX?: number, ...}\r\n      | {scaleY?: number, ...}\r\n      | {translateX?: number, ...}\r\n      | {translateY?: number, ...}\r\n      | {skewX?: string, ...}\r\n      | {skewY?: string, ...},\r\n    >,\r\n  >),\r\n  transformMatrix: TransformMatrixPropType,\r\n  decomposedMatrix: DecomposedMatrixPropType,\r\n  scaleX: (deprecatedPropType(\r\n    ReactPropTypes.number,\r\n    'Use the transform prop instead.',\r\n  ): ReactPropsCheckType),\r\n  scaleY: (deprecatedPropType(\r\n    ReactPropTypes.number,\r\n    'Use the transform prop instead.',\r\n  ): ReactPropsCheckType),\r\n  rotation: (deprecatedPropType(\r\n    ReactPropTypes.number,\r\n    'Use the transform prop instead.',\r\n  ): ReactPropsCheckType),\r\n  translateX: (deprecatedPropType(\r\n    ReactPropTypes.number,\r\n    'Use the transform prop instead.',\r\n  ): ReactPropsCheckType),\r\n  translateY: (deprecatedPropType(\r\n    ReactPropTypes.number,\r\n    'Use the transform prop instead.',\r\n  ): ReactPropsCheckType),\r\n};\r\n\r\nmodule.exports = DeprecatedTransformPropTypes;\r\n"]},"metadata":{},"sourceType":"script"}